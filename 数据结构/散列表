散列表，也叫哈希表

什么是散列表❓ 数组的一种拓展。（利用下标随机访问）

👉关键字：数据的特征,可唯一标识数据.
👉散列函数：数据的特征和数组下标建立映射关系.
👉哈希值(散列值)：散列函数计算得到的值.

 ==> key   hashFunction   table

👉散列函数：1.函数得到的散列值为非负数(因数组下标从0开始)
👉散列冲突：数组空间有限,不同的key对应的散列值可能相同.
👉散列冲突解决办法：1.开放寻址法  2.链表法

什么是开放寻址法❓ （少数据量）
    1.线性探测:某个值经过散列函数散列后的存储位置被占用了,就从当前位置
依次往后找个空闲位置插入.
    2.二次探测：线性探测的基础上增加步长.

什么是链表法❓  (大数据量)
    简单理解：数组每个位置都对应了一个链表，当出现冲突的时候，直接往这个
    链表里插入数据. 均匀的散列函数对应的链表槽的个数是n/m



装载因子是什么❓ 
    1.装载因子表示散列表空闲位置的多少， 计算公式是: insetNums / tableLength
    2.=>装载因子越大说明空闲空间越少，冲突越多，性能下降.


思考题1.👉 10万条Url访问数据，如何根据访问次数进行排序❓ 
                以url作为key 访问次数作为value.

思考题2.👉 两个字符串数组，每个数组约10万条字符串，如何快速找出两个数组中相同的字符串❓
                以第一个数组来构建散列表,字符串作为key,将value设置为true
                再遍历第二个字符串数组，以字符串为key在散列表中进行查找,
                如果value为true说明存在相同字符串.