思考: 

1.二叉树有几种存储方式❓
    无非两种,
    👉基于数组的顺序存储：需要计算每个节点应该存在数组中的下标,左节点在2i的位置，右节点在2i+1的位置
    👉基于链表指针的二叉链式存储(更直观)：每个节点有三个字段,分别存储数据和左右节点的指针.

2.什么样的二叉树适合用数组来存储❓
    完全二叉树

3.什么是完全二叉树❓ 
    除了最后一层其余层的节点都是满的,最后一层的节点当只有一个的时候必须是左节点。
    👉优点：最佳的存储方式是采用数组顺序存储,最节省内存. 不需要用链式存储还要存储其它节点的指针.
    

4.什么是平衡二叉树❓

5.二叉树遍历的方式以及时间复杂度❓
    前/中/后序
    O(n) 和节点个数成正比.

6.如何对二叉树进行层次遍历❓
    第一种方式👉：借助队列结构进行辅助，根节点先入队列，然后循环从队列中pop节点，将pop出来的节点的左子节点先入队列，右节点后入队列
    依次循环，直到队列为空。
    第二种方式👉：从根节点开始，图的广度优先遍历.

-------------------------------------------------------------------------------------------------------------------------


8.二叉查找树的特点❓
    树本身的特点👉：要求节点下的左节点都比父节点的值小，右节点都比父节点大.
    数据结构特点👉：同散列表一样，支持高效的查找/删除/插入/操作.