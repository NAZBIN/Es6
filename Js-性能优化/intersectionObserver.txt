为什么要用IntersectionObserver❓
    在开发miui以及Miot的时候会有一个需求：观察目标元素是否出现在视口。
    传统的使用方式也就是我第一次做这个的时候使用的方法是用scroll事件，但当scroll事件密集发生的时候，容易造成性能问题.

    监听目标元素也即是就是目标元素和视口产生的交叉区, IntersectionObserver就是用来做这样的事的。
    IntersectionObserver构造函数返回的是一个观察者实例, MDN对其的解释是异步的观察目标元素与视口交叉区域的变化。
    通过observe和unobserve来观察一个目标或停止对目标的观察


option选项❓
    1.threshold：决定了在什么时候触发回调函数
        new IntersectionObserver(
        entries => {/* ... */}, 
        {
            threshold: [0, 0.25, 0.5, 0.75, 1]
        }
        );
        用户可以自定义这个数组。比如，[0, 0.25, 0.5, 0.75, 1]就表示当目标元素 0%、25%、50%、75%、100% 可见时，会触发回调函数。

    2.root
        IntersectionObserver支持目标元素在容器内滚动,
        root指定容器所在的目标节点.
            root:document.querySelector('.outer');
        